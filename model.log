QuantVisionTransformer(
  (patch_embed): PatchEmbed(
    (quant): QuantAct({'nbits': 8, 'signed': True, 'offset': False, 'dim': 1, 'learned': True, 'mixpre': True})
    (proj): QuantConv2d(3, 192, kernel_size=(16, 16), stride=(16, 16), {'nbits': 8, 'mode': <Qmodes.layer_wise: 1>, 'learned': True, 'mixpre': True})
  )
  (pos_drop): Dropout(p=0.0, inplace=False)
  (blocks): ModuleList(
    (0): Block(
      (norm1): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
      (attn): Attention(
        (quant_input): QuantAct({'nbits': 5, 'signed': True, 'offset': False, 'dim': 1, 'learned': True, 'mixpre': True})
        (proj_q): QuantMuitiHeadLinear(in_features=192, out_features=192, bias=True, None)
        (proj_k): QuantMuitiHeadLinear(in_features=192, out_features=192, bias=True, None)
        (proj_v): QuantMuitiHeadLinear(in_features=192, out_features=192, bias=True, None)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (quant_q): QuantMultiHeadAct(None)
        (quant_k): QuantMultiHeadAct(None)
        (quant_v): QuantMultiHeadAct(None)
        (quant_attn): QuantMultiHeadAct(None)
        (quant_output): QuantMultiHeadAct(None)
        (proj): QuantMuitiHeadLinear_in(in_features=192, out_features=192, bias=True, None)
        (proj_drop): Dropout(p=0.0, inplace=False)
      )
      (drop_path): Identity()
      (norm2): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
      (mlp): Mlp(
        (quant1): QuantAct({'nbits': 5, 'signed': True, 'offset': False, 'dim': 1, 'learned': True, 'mixpre': True})
        (fc1): QuantLinear(in_features=192, out_features=768, bias=True, {'nbits': 5, 'learned': True, 'mixpre': True})
        (act): GELU(approximate='none')
        (quant2): QuantAct({'nbits': 5, 'signed': False, 'offset': True, 'dim': 1, 'learned': True, 'mixpre': True})
        (fc2): QuantLinear(in_features=768, out_features=192, bias=True, {'nbits': 5, 'learned': True, 'mixpre': True})
        (drop): Dropout(p=0.0, inplace=False)
      )
    )
  )
  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
  (quant): QuantAct({'nbits': 8, 'signed': True, 'offset': False, 'dim': 1, 'learned': True, 'mixpre': True})
  (head): QuantLinear(in_features=192, out_features=1000, bias=True, {'nbits': 8, 'learned': True, 'mixpre': True})
)